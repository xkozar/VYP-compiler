#! /bin/vypint
# VYPcode: 1.0
# Generated by: xkozar02

ALIAS FP $0
JUMP main


LABEL print
	WRITEI [$SP - 2]
    WRITES "\n"
	SUBI $SP, $SP, 2
	RETURN [$SP + 2]


LABEL main
	#Function start
	ADDI $SP, $SP, 1
	SET $FP, $SP

	#Create variable x
	CREATE $1, 1
	SET [$FP+ 0], $1

	# Restore stack pointer
	ADDI $SP, $FP, 1

	#Literal expression 5
	SET [$SP], 5
	ADDI $SP, $SP, 1

	# Variable assignment x
	SUBI $SP, $SP, 1
	SET [$FP+ 0], [$SP]

	# Restore stack pointer
	ADDI $SP, $FP, 1

	# Start WHILE
	LABEL WHILE4:4
	# Variable expression
	SET [$SP], [$FP+ 0]
	ADDI $SP, $SP, 1

	#Literal expression 0
	SET [$SP], 0
	ADDI $SP, $SP, 1

	# Binary expression
	GTI $4, [$SP -2], [$SP -1]
	SET [$SP - 2], $4
	SUBI $SP, $SP, 1

	# Evaluate WHILE expression
	SUBI $SP, $SP, 1
	JUMPZ WHILE4:4__end, [$SP]
	# Variable expression
	SET [$SP], [$FP+ 0]
	ADDI $SP, $SP, 1

	# Calling function print
	SET [$SP], $FP
	ADDI $SP, $SP, 1
	CALL [$SP], print

	# Restore stack pointer
	ADDI $SP, $FP, 1

	# Variable expression
	SET [$SP], [$FP+ 0]
	ADDI $SP, $SP, 1

	#Literal expression 1
	SET [$SP], 1
	ADDI $SP, $SP, 1

	# Binary expression
	SUBI $4, [$SP -2], [$SP -1]
	SET [$SP - 2], $4
	SUBI $SP, $SP, 1

	# Variable assignment x
	SUBI $SP, $SP, 1
	SET [$FP+ 0], [$SP]

	# Restore stack pointer
	ADDI $SP, $FP, 1

	# End WHILE
	JUMP WHILE4:4
	LABEL WHILE4:4__end
	# Restore stack pointer
	ADDI $SP, $FP, 1


	JUMP __END


LABEL __END
