#! /bin/vypint
# VYPcode: 1.0
# Generated by: xkozar02

ALIAS FP $0
# VMT of class Object
CREATE $6, 2
SET [$SP], $6
ADDI $SP, $SP, 1

SETWORD $6, 0, "Object:toString"
SETWORD $6, 1, "Object:getClass"
# VMT of class Shape
CREATE $6, 4
SET [$SP], $6
ADDI $SP, $SP, 1

SETWORD $6, 0, "Object:toString"
SETWORD $6, 1, "Object:getClass"
SETWORD $6, 2, "Shape:Shape"
SETWORD $6, 3, "Shape:hello"
# VMT of class Triangle
CREATE $6, 5
SET [$SP], $6
ADDI $SP, $SP, 1

SETWORD $6, 0, "Object:toString"
SETWORD $6, 1, "Object:getClass"
SETWORD $6, 2, "Shape:Shape"
SETWORD $6, 3, "Shape:hello"
SETWORD $6, 4, "Triangle:Triangle"

JUMP main


LABEL Object:toString
    INT2STRING $7, [$SP - 2] 
	SUBI $SP, $SP, 1
    SET [$SP - 1], $7
	RETURN [$SP + 1]



LABEL Object:getClass
	GETWORD $7, [$SP - 2], 0
	SUBI $SP, $SP, 1
    SET [$SP - 1], $7
	RETURN [$SP + 1]



LABEL concat
    GETSIZE $4, [$SP - 3] # Left string
    GETSIZE $5, [$SP - 2] # Right string
    COPY $6, [$SP - 3]
    ADDI $1, $4, $5 # Total length
    RESIZE $6, $1
    SET $2, 0

    LABEL concat_start
    LTI $1, $2, $5
    JUMPZ concat_end, $1

    GETWORD $1, [$SP-2], $2
    ADDI $7, $2, $4
    SETWORD $6, $7, $1

    ADDI $2, $2, 1
    JUMP concat_start
    LABEL concat_end

    SUBI $SP, $SP, 3
    SET [$SP], $6
    ADDI $SP, $SP, 1
    RETURN [$SP + 2]



LABEL length
	GETSIZE $7, [$SP - 2]
	SUBI $SP, $SP, 1
    SET [$SP - 1], $7
	RETURN [$SP + 1]



LABEL readInt
    READI $7
    SET [$SP - 1], $7
	RETURN [$SP]



LABEL readString
    READS $7
    SET [$SP - 1], $7
	RETURN [$SP]



LABEL subStr
    GETSIZE $7, [$SP - 4] # Original string size

    GTI $4, [$SP - 3], $7
    LTI $5, [$SP - 3], 0
    OR $4, $4, $5
    JUMPZ __subStrStart, $4
    CREATE $6, 1
    SETWORD $6, 0, ""
    GETWORD $6, $6, 0
    JUMP substr_end

    LABEL __subStrStart
    CREATE $6, [$SP - 2] # Chunk with size
    SET $4, [$SP - 3] # BEGIN INDEX
    SET $2, 0 #COUNTER
    ADDI $1, $4, [$SP - 2]
    LTI $1, $1, $7
    JUMPNZ substr_start, $1
    SUBI $1, $7, $4
    
    RESIZE $6, $1 
    
    LABEL substr_start
    LTI $1, $4, $7
    JUMPZ substr_end, $1

    LTI $1, $2, [$SP - 2]
    JUMPZ substr_end, $1

    GETWORD $1, [$SP-4], $4
    SETWORD $6, $2, $1

    ADDI $2, $2, 1
    ADDI $4, $4, 1
    JUMP substr_start
    LABEL substr_end

    SUBI $SP, $SP, 4
    SET [$SP], $6
    ADDI $SP, $SP, 1
    RETURN [$SP + 3]


LABEL Shape:Shape
	#Function start
	ADDI $SP, $SP, 1
	SET $FP, $SP

	#String literal expression "SHAPE constructor"
	CREATE $6, 1
	SETWORD $6, 0, "SHAPE constructor"
	GETWORD $6, $6, 0
	SET [$SP], $6
	ADDI $SP, $SP, 1

	# Print variables
	WRITES [$SP-1]
	# Restore stack pointer
	ADDI $SP, $FP, 0

	# Return value
	SET $2, [$FP - 1]
	SET $3, [$FP - 2]
	SUBI $SP, $SP, 1
	SUBI $SP, $FP, 1
	SUBI $SP, $SP, 1
	SET $FP, $3
	RETURN $2



LABEL Shape:hello
	#Function start
	ADDI $SP, $SP, 1
	SET $FP, $SP

	# Return value
	SET $2, [$FP - 1]
	SET $3, [$FP - 2]
	SUBI $SP, $SP, 1
	SUBI $SP, $FP, 1
	SUBI $SP, $SP, 1
	SET $FP, $3
	RETURN $2



LABEL Triangle:Triangle
	#Function start
	ADDI $SP, $SP, 1
	SET $FP, $SP

	# Variable expression 'this'
	SET [$SP], [$FP-3]
	ADDI $SP, $SP, 1

	# Creating new instance of object Shape
	CREATE $6, 3
	SETWORD $6, 0, "Shape"
	SETWORD $6, 1, [1]
	SETWORD $6, 2, [0]
	SET [$SP], $6
	ADDI $SP, $SP, 1

	# Calling method Shape
	GETWORD $7, [$SP-1], 1
	GETWORD $7, $7, 2
	SET [$SP], $FP
	ADDI $SP, $SP, 1
	CALL [$SP], $7

	# Field assignment 'test'
	SUBI $SP, $SP, 2
	SETWORD [$SP], 3, [$SP + 1]

	# Restore stack pointer
	ADDI $SP, $FP, 0

	# Variable expression 'this'
	SET [$SP], [$FP-3]
	ADDI $SP, $SP, 1

	# Field expression 'test'
	GETWORD $7, [$SP - 1], 3
	SET [$SP-1], $7

	# Calling method hello
	GETWORD $7, [$SP-1], 1
	GETWORD $7, $7, 3
	SET [$SP], $FP
	ADDI $SP, $SP, 1
	CALL [$SP], $7

	# Restore stack pointer
	ADDI $SP, $FP, 0

	# Return value
	SET $2, [$FP - 1]
	SET $3, [$FP - 2]
	SUBI $SP, $SP, 1
	SUBI $SP, $FP, 1
	SUBI $SP, $SP, 1
	SET $FP, $3
	RETURN $2



LABEL main
	#Function start
	ADDI $SP, $SP, 1
	SET $FP, $SP

	# Creating new instance of object Triangle
	CREATE $6, 4
	SETWORD $6, 0, "Triangle"
	SETWORD $6, 1, [2]
	SETWORD $6, 2, [1]
	SETWORD $6, 3, 0
	SET [$SP], $6
	ADDI $SP, $SP, 1

	# Calling method Shape
	GETWORD $7, [$SP-1], 1
	GETWORD $7, $7, 2
	SET [$SP], $FP
	ADDI $SP, $SP, 1
	CALL [$SP], $7

	# Calling method Triangle
	GETWORD $7, [$SP-1], 1
	GETWORD $7, $7, 4
	SET [$SP], $FP
	ADDI $SP, $SP, 1
	CALL [$SP], $7

	# Restore stack pointer
	ADDI $SP, $FP, 0


	JUMP __END


LABEL __END
